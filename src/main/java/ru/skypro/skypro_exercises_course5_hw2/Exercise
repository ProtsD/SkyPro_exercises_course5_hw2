Шаг 1
    Добавьте в каждый метод сервиса сообщение, уведомляющее о том, что был вызван метод с определенным названием.

    Например, если вы вызываете метод createEmployee, то нужно производить вызов следующего кода:
        logger.info("Was invoked method for create employee " + <информация о переданном сотруднике>);

    Если у вас в коде есть исключения, то перед их вызовом стоит записать информацию в лог, используя необходимый
    уровень логирования. Например:
        logger.error("There is no employee with id = " + id);

    Само исключение нужно также логировать в логгере. Можно, например, просто передать его в логгер:
        logger.error("There is no employee with id = " + id, e);
    Здесь e — это наше исключение.

    Дополнительно добавьте логи с уровнем логирования debug (на случай успешного обращения к базе данных).

Шаг 2
    Реализуйте аппендер, чтобы в отдельный файл вносились логи с уровнем Error и выше.

Шаг 3
    Создайте контроллер InfoController.
    Добавьте в него один эндпойнт: GET /appInfo
    Затем:
        1. Добавьте в application.propeties свойство app.env = dev. Это свойство, которое указывает на среду приложения.
        2. Получите свойство в контроллере с помощью @Value в виде строки.
        3. Верните данную строку в методе контроллера GET /appInfo.
        4. Теперь создайте новый профиль application-test.properties и измените в нём свойство app.env на test.
        5. Попробуйте запустить приложение с разными профилями и проверить, что переопределение свойства действительно работает.